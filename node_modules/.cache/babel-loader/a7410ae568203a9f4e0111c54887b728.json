{"ast":null,"code":"import _taggedTemplateLiteral from \"C:\\\\Users\\\\admin\\\\Desktop\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\client\\\\src\\\\containers\\\\cart-item.tsx\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  query LaunchDetails($launchId: ID!) {\\n    launch(id: $launchId) {\\n      site\\n      rocket {\\n        type\\n      }\\n      ...LaunchTile\\n    }\\n  }\\n  \", \"\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query GetLaunch($launchId: ID!) {\\n    launch(id: $launchId) {\\n     ...LaunchTile\\n    }\\n  }\\n \", \"\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport LaunchTile from '../components/launch-tile';\nimport { LAUNCH_TILE_DATA } from '../pages/launches';\nexport var GET_LAUNCH = gql(_templateObject(), LAUNCH_TILE_DATA);\nexport var GET_LAUNCH_DETAILS = gql(_templateObject2(), LAUNCH_TILE_DATA);\n\nvar CartItem = function CartItem(_ref) {\n  var launchId = _ref.launchId;\n\n  var _useQuery = useQuery(GET_LAUNCH, {\n    variables: {\n      launchId\n    }\n  }),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error;\n\n  if (loading) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n  if (error) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  }, \"ERROR: \", error.message);\n  return data && /*#__PURE__*/React.createElement(LaunchTile, {\n    launch: data.launch,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 18\n    }\n  });\n};\n\nexport default CartItem;","map":{"version":3,"sources":["C:/Users/admin/Desktop/client/src/containers/cart-item.tsx"],"names":["React","useQuery","gql","LaunchTile","LAUNCH_TILE_DATA","GET_LAUNCH","GET_LAUNCH_DETAILS","CartItem","launchId","variables","data","loading","error","message","launch"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,SAAQC,gBAAR,QAAgC,mBAAhC;AAGA,OAAO,IAAMC,UAAU,GAAGH,GAAH,oBAMpBE,gBANoB,CAAhB;AASP,OAAO,IAAME,kBAAkB,GAAGJ,GAAH,qBAU3BE,gBAV2B,CAAxB;;AAeP,IAAMG,QAAiC,GAAG,SAApCA,QAAoC,OAAkB;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAAA,kBACzBP,QAAQ,CACvCI,UADuC,EAEvC;AAAEI,IAAAA,SAAS,EAAE;AAAED,MAAAA;AAAF;AAAb,GAFuC,CADiB;AAAA,MAClDE,IADkD,aAClDA,IADkD;AAAA,MAC5CC,OAD4C,aAC5CA,OAD4C;AAAA,MACnCC,KADmC,aACnCA,KADmC;;AAK1D,MAAID,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,MAAIC,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAWA,KAAK,CAACC,OAAjB,CAAP;AACX,SAAOH,IAAI,iBAAI,oBAAC,UAAD;AAAY,IAAA,MAAM,EAAEA,IAAI,CAACI,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAf;AACD,CARD;;AAUA,eAAeP,QAAf","sourcesContent":["import React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\n\nimport LaunchTile from '../components/launch-tile';\nimport {LAUNCH_TILE_DATA}  from '../pages/launches';\nimport * as LaunchDetailTypes from '../pages/__generated__/LaunchDetails';\n\nexport const GET_LAUNCH = gql`\n  query GetLaunch($launchId: ID!) {\n    launch(id: $launchId) {\n     ...LaunchTile\n    }\n  }\n ${LAUNCH_TILE_DATA}\n`;\n\nexport const GET_LAUNCH_DETAILS = gql`\n  query LaunchDetails($launchId: ID!) {\n    launch(id: $launchId) {\n      site\n      rocket {\n        type\n      }\n      ...LaunchTile\n    }\n  }\n  ${LAUNCH_TILE_DATA}\n`;\n\ninterface CartItemProps extends LaunchDetailTypes.LaunchDetailsVariables {}\n\nconst CartItem: React.FC<CartItemProps> = ({ launchId }) => {\n  const { data, loading, error } = useQuery(\n    GET_LAUNCH,\n    { variables: { launchId } }\n  );\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>ERROR: {error.message}</p>;\n  return data && <LaunchTile launch={data.launch} />;\n}\n\nexport default CartItem;\n"]},"metadata":{},"sourceType":"module"}