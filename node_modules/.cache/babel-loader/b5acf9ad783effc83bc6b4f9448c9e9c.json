{"ast":null,"code":"import _taggedTemplateLiteral from \"C:\\\\Users\\\\admin\\\\Desktop\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\client\\\\src\\\\index.tsx\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query IsUserLoggedIn {\\n    isLoggedIn @client\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ApolloClient } from 'apollo-client';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { HttpLink } from 'apollo-link-http';\nimport { ApolloProvider, useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport Pages from './pages';\nimport Login from './pages/login';\nimport { resolvers, typeDefs } from './resolvers';\nimport injectStyles from './styles';\nvar cache = new InMemoryCache();\nvar client = new ApolloClient({\n  cache,\n  link: new HttpLink({\n    uri: 'https://maxgraphql.herokuapp.com/',\n    headers: {\n      authorization: localStorage.getItem('token'),\n      'client-name': 'Space Explorer [web]',\n      'client-version': '1.0.0'\n    }\n  }),\n  resolvers,\n  typeDefs\n});\ncache.writeData({\n  data: {\n    isLoggedIn: !!localStorage.getItem('token'),\n    cartItems: []\n  }\n});\nvar IS_LOGGED_IN = gql(_templateObject());\n\nfunction IsLoggedIn() {\n  var _useQuery = useQuery(IS_LOGGED_IN),\n      data = _useQuery.data;\n\n  return data.isLoggedIn ? /*#__PURE__*/React.createElement(Pages, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 28\n    }\n  }) : /*#__PURE__*/React.createElement(Login, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 40\n    }\n  });\n}\n\ninjectStyles();\nReactDOM.render( /*#__PURE__*/React.createElement(ApolloProvider, {\n  client: client,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(IsLoggedIn, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }\n})), document.getElementById('root'));","map":{"version":3,"sources":["C:/Users/admin/Desktop/client/src/index.tsx"],"names":["React","ReactDOM","ApolloClient","InMemoryCache","HttpLink","ApolloProvider","useQuery","gql","Pages","Login","resolvers","typeDefs","injectStyles","cache","client","link","uri","headers","authorization","localStorage","getItem","writeData","data","isLoggedIn","cartItems","IS_LOGGED_IN","IsLoggedIn","render","document","getElementById"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA,SAASC,YAAT,QAA6B,eAA7B;AACA,SAASC,aAAT,QAAqD,uBAArD;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,cAAT,EAAyBC,QAAzB,QAAyC,qBAAzC;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,aAApC;AACA,OAAOC,YAAP,MAAyB,UAAzB;AAEA,IAAMC,KAAK,GAAG,IAAIV,aAAJ,EAAd;AAEA,IAAMW,MAA2C,GAAG,IAAIZ,YAAJ,CAAiB;AACnEW,EAAAA,KADmE;AAEnEE,EAAAA,IAAI,EAAE,IAAIX,QAAJ,CAAa;AACnBY,IAAAA,GAAG,EAAE,mCADc;AAEnBC,IAAAA,OAAO,EAAE;AACLC,MAAAA,aAAa,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB,CADV;AAEL,qBAAe,sBAFV;AAGL,wBAAkB;AAHb;AAFU,GAAb,CAF6D;AAUnEV,EAAAA,SAVmE;AAWnEC,EAAAA;AAXmE,CAAjB,CAApD;AAgBAE,KAAK,CAACQ,SAAN,CAAgB;AACdC,EAAAA,IAAI,EAAE;AACJC,IAAAA,UAAU,EAAE,CAAC,CAACJ,YAAY,CAACC,OAAb,CAAqB,OAArB,CADV;AAEJI,IAAAA,SAAS,EAAE;AAFP;AADQ,CAAhB;AAOA,IAAMC,YAAY,GAAGlB,GAAH,mBAAlB;;AAMA,SAASmB,UAAT,GAAsB;AAAA,kBACHpB,QAAQ,CAACmB,YAAD,CADL;AAAA,MACZH,IADY,aACZA,IADY;;AAEpB,SAAOA,IAAI,CAACC,UAAL,gBAAkB,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAlB,gBAA8B,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAArC;AACD;;AAEDX,YAAY;AACZX,QAAQ,CAAC0B,MAAT,eAEE,oBAAC,cAAD;AAAgB,EAAA,MAAM,EAAEb,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CAFF,EAKEc,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CALF","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport { ApolloClient } from 'apollo-client';\r\nimport { InMemoryCache, NormalizedCacheObject } from 'apollo-cache-inmemory';\r\nimport { HttpLink } from 'apollo-link-http';\r\nimport { ApolloProvider, useQuery } from '@apollo/react-hooks';\r\nimport gql from 'graphql-tag';\r\n\r\nimport Pages from './pages';\r\nimport Login from './pages/login';\r\nimport { resolvers, typeDefs } from './resolvers';\r\nimport injectStyles from './styles';\r\n\r\nconst cache = new InMemoryCache();\r\n\r\nconst client: ApolloClient<NormalizedCacheObject> = new ApolloClient({\r\n  cache,\r\n  link: new HttpLink({\r\n  uri: 'https://maxgraphql.herokuapp.com/',\r\n  headers: {\r\n      authorization: localStorage.getItem('token'),\r\n      'client-name': 'Space Explorer [web]',\r\n      'client-version': '1.0.0',\r\n    },\r\n  }),\r\n  resolvers,\r\n  typeDefs,\r\n});\r\n\r\n\r\n\r\ncache.writeData({\r\n  data: {\r\n    isLoggedIn: !!localStorage.getItem('token'),\r\n    cartItems: [],\r\n  },\r\n});\r\n\r\nconst IS_LOGGED_IN = gql`\r\n  query IsUserLoggedIn {\r\n    isLoggedIn @client\r\n  }\r\n`;\r\n\r\nfunction IsLoggedIn() {\r\n  const { data } = useQuery(IS_LOGGED_IN);\r\n  return data.isLoggedIn ? <Pages /> : <Login />;\r\n}\r\n\r\ninjectStyles();\r\nReactDOM.render(\r\n\r\n  <ApolloProvider client={client}>\r\n    <IsLoggedIn />\r\n  </ApolloProvider>,\r\n  document.getElementById('root'),\r\n);"]},"metadata":{},"sourceType":"module"}