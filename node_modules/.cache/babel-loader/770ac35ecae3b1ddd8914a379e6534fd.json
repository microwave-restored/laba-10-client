{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\admin\\\\Desktop\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"C:\\\\Users\\\\admin\\\\Desktop\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\client\\\\src\\\\pages\\\\login.tsx\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation login($email: String!) {\\n    login(email: $email)\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport { useApolloClient, useMutation } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport { LoginForm, Loading } from '../components';\nexport var LOGIN_USER = gql(_templateObject());\nexport default function Login() {\n  var client = useApolloClient();\n\n  var _useMutation = useMutation(LOGIN_USER, {\n    onCompleted(_ref) {\n      var login = _ref.login;\n      localStorage.setItem('token', login);\n      client.writeData({\n        data: {\n          isLoggedIn: true\n        }\n      });\n    }\n\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      login = _useMutation2[0],\n      _useMutation2$ = _useMutation2[1],\n      loading = _useMutation2$.loading,\n      error = _useMutation2$.error;\n\n  if (loading) return /*#__PURE__*/React.createElement(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 23\n    }\n  });\n  if (error) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 21\n    }\n  }, \"An error occurred\");\n  return /*#__PURE__*/React.createElement(LoginForm, {\n    login: login,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 10\n    }\n  });\n}","map":{"version":3,"sources":["C:/Users/admin/Desktop/client/src/pages/login.tsx"],"names":["React","useApolloClient","useMutation","gql","LoginForm","Loading","LOGIN_USER","Login","client","onCompleted","login","localStorage","setItem","writeData","data","isLoggedIn","loading","error"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,EAA0BC,WAA1B,QAA6C,qBAA7C;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,SAASC,SAAT,EAAoBC,OAApB,QAAmC,eAAnC;AAIA,OAAO,IAAMC,UAAU,GAAGH,GAAH,mBAAhB;AAMP,eAAe,SAASI,KAAT,GAAiB;AAC9B,MAAMC,MAAyB,GAAGP,eAAe,EAAjD;;AAD8B,qBAEMC,WAAW,CAC7CI,UAD6C,EAE7C;AACEG,IAAAA,WAAW,OAAY;AAAA,UAATC,KAAS,QAATA,KAAS;AACrBC,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BF,KAA9B;AACAF,MAAAA,MAAM,CAACK,SAAP,CAAiB;AAAEC,QAAAA,IAAI,EAAE;AAAEC,UAAAA,UAAU,EAAE;AAAd;AAAR,OAAjB;AACD;;AAJH,GAF6C,CAFjB;AAAA;AAAA,MAEvBL,KAFuB;AAAA;AAAA,MAEdM,OAFc,kBAEdA,OAFc;AAAA,MAELC,KAFK,kBAELA,KAFK;;AAY9B,MAAID,OAAJ,EAAa,oBAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACb,MAAIC,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAP;AAEX,sBAAO,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAEP,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD","sourcesContent":["import React from 'react';\nimport { useApolloClient, useMutation } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\n\nimport { LoginForm, Loading } from '../components';\nimport ApolloClient from 'apollo-client';\nimport * as LoginTypes from './__generated__/login';\n\nexport const LOGIN_USER = gql`\n  mutation login($email: String!) {\n    login(email: $email)\n  }\n`;\n\nexport default function Login() {\n  const client: ApolloClient<any> = useApolloClient();\n  const [login, { loading, error }] = useMutation<LoginTypes.login, LoginTypes.loginVariables>(\n    LOGIN_USER,\n    {\n      onCompleted({ login }) {\n        localStorage.setItem('token', login as string);\n        client.writeData({ data: { isLoggedIn: true } });\n      }\n    }\n  );\n\n  if (loading) return <Loading />;\n  if (error) return <p>An error occurred</p>;\n\n  return <LoginForm login={login} />;\n}"]},"metadata":{},"sourceType":"module"}