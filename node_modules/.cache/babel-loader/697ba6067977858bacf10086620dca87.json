{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\admin\\\\Desktop\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"C:\\\\Users\\\\admin\\\\Desktop\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"C:\\\\Users\\\\admin\\\\Desktop\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nimport _taggedTemplateLiteral from \"C:\\\\Users\\\\admin\\\\Desktop\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\client\\\\src\\\\pages\\\\launches.tsx\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  query GetLaunchList($after: String) {\\n    launches(after: $after) {\\n      cursor\\n      hasMore\\n      launches {\\n        ...LaunchTile\\n      }\\n    }\\n  }\\n  \", \"\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  fragment LaunchTile on Launch {\\n    __typename\\n    id\\n    isBooked\\n    rocket {\\n      id\\n      name\\n    }\\n    mission {\\n      \\n      missionPatch\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Fragment } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport { LaunchTile, Header, Button, Loading } from '../components';\nexport var LAUNCH_TILE_DATA = gql(_templateObject());\nexport var GET_LAUNCHES = gql(_templateObject2(), LAUNCH_TILE_DATA);\n\nvar Launches = function Launches() {\n  var _useQuery = useQuery(GET_LAUNCHES),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      fetchMore = _useQuery.fetchMore;\n\n  if (loading) return /*#__PURE__*/React.createElement(Loading, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 23\n    }\n  });\n  if (error || !data) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 30\n    }\n  }, \"ERROR\");\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }), data.launches && data.launches.launches && data.launches.launches.map(function (launch) {\n    return /*#__PURE__*/React.createElement(LaunchTile, {\n      key: launch.id,\n      launch: launch,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }\n    });\n  }), data.launches && data.launches.hasMore && /*#__PURE__*/React.createElement(Button, {\n    onClick: function onClick() {\n      return fetchMore({\n        variables: {\n          after: data.launches.cursor\n        },\n        updateQuery: function updateQuery(prev, _ref) {\n          var fetchMoreResult = _ref.fetchMoreResult,\n              rest = _objectWithoutProperties(_ref, [\"fetchMoreResult\"]);\n\n          if (!fetchMoreResult) return prev;\n          return _objectSpread(_objectSpread({}, fetchMoreResult), {}, {\n            launches: _objectSpread(_objectSpread({}, fetchMoreResult.launches), {}, {\n              launches: [].concat(_toConsumableArray(prev.launches.launches), _toConsumableArray(fetchMoreResult.launches.launches))\n            })\n          });\n        }\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, \"Load More\"));\n};\n\nexport default Launches;","map":{"version":3,"sources":["C:/Users/admin/Desktop/client/src/pages/launches.tsx"],"names":["React","Fragment","useQuery","gql","LaunchTile","Header","Button","Loading","LAUNCH_TILE_DATA","GET_LAUNCHES","Launches","data","loading","error","fetchMore","launches","map","launch","id","hasMore","variables","after","cursor","updateQuery","prev","fetchMoreResult","rest"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,SAASC,UAAT,EAAqBC,MAArB,EAA6BC,MAA7B,EAAqCC,OAArC,QAAoD,eAApD;AAIA,OAAO,IAAMC,gBAAgB,GAAGL,GAAH,mBAAtB;AAgBP,OAAO,IAAMM,YAAY,GAAGN,GAAH,qBAUrBK,gBAVqB,CAAlB;;AAeP,IAAME,QAAiC,GAAG,SAApCA,QAAoC,GAAM;AAAA,kBAM1CR,QAAQ,CAGVO,YAHU,CANkC;AAAA,MAE5CE,IAF4C,aAE5CA,IAF4C;AAAA,MAG5CC,OAH4C,aAG5CA,OAH4C;AAAA,MAI5CC,KAJ4C,aAI5CA,KAJ4C;AAAA,MAK5CC,SAL4C,aAK5CA,SAL4C;;AAW9C,MAAIF,OAAJ,EAAa,oBAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACb,MAAIC,KAAK,IAAI,CAACF,IAAd,EAAoB,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAP;AAEpB,sBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGA,IAAI,CAACI,QAAL,IACCJ,IAAI,CAACI,QAAL,CAAcA,QADf,IAECJ,IAAI,CAACI,QAAL,CAAcA,QAAd,CAAuBC,GAAvB,CAA2B,UAACC,MAAD;AAAA,wBACzB,oBAAC,UAAD;AAAY,MAAA,GAAG,EAAEA,MAAM,CAACC,EAAxB;AAA4B,MAAA,MAAM,EAAED,MAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADyB;AAAA,GAA3B,CAJJ,EAOGN,IAAI,CAACI,QAAL,IACCJ,IAAI,CAACI,QAAL,CAAcI,OADf,iBAEG,oBAAC,MAAD;AACE,IAAA,OAAO,EAAE;AAAA,aACPL,SAAS,CAAC;AACRM,QAAAA,SAAS,EAAE;AACTC,UAAAA,KAAK,EAAEV,IAAI,CAACI,QAAL,CAAcO;AADZ,SADH;AAIRC,QAAAA,WAAW,EAAE,qBAACC,IAAD,QAAwC;AAAA,cAA/BC,eAA+B,QAA/BA,eAA+B;AAAA,cAAXC,IAAW;;AACnD,cAAI,CAACD,eAAL,EAAsB,OAAOD,IAAP;AACtB,iDACKC,eADL;AAEEV,YAAAA,QAAQ,kCACHU,eAAe,CAACV,QADb;AAENA,cAAAA,QAAQ,+BACHS,IAAI,CAACT,QAAL,CAAcA,QADX,sBAEHU,eAAe,CAACV,QAAhB,CAAyBA,QAFtB;AAFF;AAFV;AAUD;AAhBO,OAAD,CADF;AAAA,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBATN,CADF;AAqCD,CAnDD;;AAqDA,eAAeL,QAAf","sourcesContent":["import React, { Fragment } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\n\nimport { LaunchTile, Header, Button, Loading } from '../components';\nimport { RouteComponentProps } from '@reach/router';\nimport * as GetLaunchListTypes from './__generated__/GetLaunchList';\n\nexport const LAUNCH_TILE_DATA = gql`\n  fragment LaunchTile on Launch {\n    __typename\n    id\n    isBooked\n    rocket {\n      id\n      name\n    }\n    mission {\n      \n      missionPatch\n    }\n  }\n`;\n\nexport const GET_LAUNCHES = gql`\n  query GetLaunchList($after: String) {\n    launches(after: $after) {\n      cursor\n      hasMore\n      launches {\n        ...LaunchTile\n      }\n    }\n  }\n  ${LAUNCH_TILE_DATA}\n`;\n\ninterface LaunchesProps extends RouteComponentProps {}\n\nconst Launches: React.FC<LaunchesProps> = () => {\n  const { \n    data, \n    loading, \n    error, \n    fetchMore \n  } = useQuery<\n    GetLaunchListTypes.GetLaunchList, \n    GetLaunchListTypes.GetLaunchListVariables\n  >(GET_LAUNCHES);\n\n  if (loading) return <Loading />;\n  if (error || !data) return <p>ERROR</p>;\n\n  return (\n    <Fragment>\n      <Header />\n      {data.launches &&\n        data.launches.launches &&\n        data.launches.launches.map((launch: any) => (\n          <LaunchTile key={launch.id} launch={launch} />\n        ))}\n      {data.launches &&\n        data.launches.hasMore && (\n          <Button\n            onClick={() =>\n              fetchMore({\n                variables: {\n                  after: data.launches.cursor,\n                },\n                updateQuery: (prev, { fetchMoreResult, ...rest }) => {\n                  if (!fetchMoreResult) return prev;\n                  return {\n                    ...fetchMoreResult,\n                    launches: {\n                      ...fetchMoreResult.launches,\n                      launches: [\n                        ...prev.launches.launches,\n                        ...fetchMoreResult.launches.launches,\n                      ],\n                    },\n                  };\n                },\n              })\n            }\n          >\n            Load More\n          </Button>\n        )}\n    </Fragment>\n  );\n}\n\nexport default Launches;\n"]},"metadata":{},"sourceType":"module"}