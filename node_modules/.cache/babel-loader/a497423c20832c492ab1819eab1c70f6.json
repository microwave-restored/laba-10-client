{"ast":null,"code":"import _taggedTemplateLiteral from \"C:\\\\Users\\\\admin\\\\Desktop\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\client\\\\src\\\\pages\\\\launch.tsx\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query LaunchDetails($launchId: ID!) {\\n    launch(id: $launchId) {\\n     \\n      site\\n      rocket {\\n        type\\n      }\\n      ...LaunchTile\\n    }\\n  }\\n  \", \"\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Fragment } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport { LAUNCH_TILE_DATA } from './launches';\nimport { Loading, Header, LaunchDetail } from '../components';\nimport { ActionButton } from '../containers';\nexport var GET_LAUNCH_DETAILS = gql(_templateObject(), LAUNCH_TILE_DATA);\n\nvar Launch = function Launch(_ref) {\n  var launchId = _ref.launchId;\n\n  var _useQuery = useQuery(GET_LAUNCH_DETAILS, {\n    variables: {\n      launchId\n    }\n  }),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error;\n\n  if (loading) return /*#__PURE__*/React.createElement(Loading, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 23\n    }\n  });\n  if (error) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }\n  }, \"ERROR: \", error.message);\n  if (!data) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  }, \"Not found\");\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    image: data.launch && data.launch.mission && data.launch.mission.missionPatch,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, data && data.launch && data.launch.mission && data.launch.mission.name), /*#__PURE__*/React.createElement(LaunchDetail, Object.assign({}, data.launch, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(ActionButton, Object.assign({}, data.launch, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  })));\n};\n\nexport default Launch;","map":{"version":3,"sources":["C:/Users/admin/Desktop/client/src/pages/launch.tsx"],"names":["React","Fragment","useQuery","gql","LAUNCH_TILE_DATA","Loading","Header","LaunchDetail","ActionButton","GET_LAUNCH_DETAILS","Launch","launchId","variables","data","loading","error","message","launch","mission","missionPatch","name"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,SAASC,gBAAT,QAAiC,YAAjC;AACA,SAASC,OAAT,EAAkBC,MAAlB,EAA0BC,YAA1B,QAA8C,eAA9C;AACA,SAASC,YAAT,QAA6B,eAA7B;AAIA,OAAO,IAAMC,kBAAkB,GAAGN,GAAH,oBAW3BC,gBAX2B,CAAxB;;AAkBP,IAAMM,MAA6B,GAAG,SAAhCA,MAAgC,OAAkB;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAAA,kBAKlDT,QAAQ,CAGVO,kBAHU,EAIV;AAAEG,IAAAA,SAAS,EAAE;AAAED,MAAAA;AAAF;AAAb,GAJU,CAL0C;AAAA,MAEpDE,IAFoD,aAEpDA,IAFoD;AAAA,MAGpDC,OAHoD,aAGpDA,OAHoD;AAAA,MAIpDC,KAJoD,aAIpDA,KAJoD;;AAYtD,MAAID,OAAJ,EAAa,oBAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACb,MAAIC,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAWA,KAAK,CAACC,OAAjB,CAAP;AACX,MAAI,CAACH,IAAL,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAP;AAEX,sBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAEA,IAAI,CAACI,MAAL,IAAeJ,IAAI,CAACI,MAAL,CAAYC,OAA3B,IAAsCL,IAAI,CAACI,MAAL,CAAYC,OAAZ,CAAoBC,YAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,IAAI,IAAIA,IAAI,CAACI,MAAb,IAAuBJ,IAAI,CAACI,MAAL,CAAYC,OAAnC,IAA8CL,IAAI,CAACI,MAAL,CAAYC,OAAZ,CAAoBE,IADrE,CADF,eAIE,oBAAC,YAAD,oBAAkBP,IAAI,CAACI,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAJF,eAKE,oBAAC,YAAD,oBAAkBJ,IAAI,CAACI,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KALF,CADF;AASD,CAzBD;;AA2BA,eAAeP,MAAf","sourcesContent":["import React, { Fragment } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\n\nimport { LAUNCH_TILE_DATA } from './launches';\nimport { Loading, Header, LaunchDetail } from '../components';\nimport { ActionButton } from '../containers';\nimport { RouteComponentProps } from '@reach/router';\nimport * as LaunchDetailsTypes from './__generated__/LaunchDetails';\n\nexport const GET_LAUNCH_DETAILS = gql`\n  query LaunchDetails($launchId: ID!) {\n    launch(id: $launchId) {\n     \n      site\n      rocket {\n        type\n      }\n      ...LaunchTile\n    }\n  }\n  ${LAUNCH_TILE_DATA}\n`;\n\ninterface LaunchProps extends RouteComponentProps {\n  launchId?: any;\n}\n\nconst Launch: React.FC<LaunchProps> = ({ launchId }) => {\n  const { \n    data, \n    loading, \n    error \n  } = useQuery<\n    LaunchDetailsTypes.LaunchDetails, \n    LaunchDetailsTypes.LaunchDetailsVariables\n  >(GET_LAUNCH_DETAILS, \n    { variables: { launchId } }\n  );\n  \n  if (loading) return <Loading />;\n  if (error) return <p>ERROR: {error.message}</p>;\n  if (!data) return <p>Not found</p>;\n\n  return (\n    <Fragment>\n      <Header image={data.launch && data.launch.mission && data.launch.mission.missionPatch}>\n        {data && data.launch && data.launch.mission && data.launch.mission.name}\n      </Header>\n      <LaunchDetail {...data.launch} />\n      <ActionButton {...data.launch} />\n    </Fragment>\n  );\n}\n\nexport default Launch;\n"]},"metadata":{},"sourceType":"module"}